a. Quem inventou o sistema de controle de versão Git e por quê?
O Git é um projeto de código aberto maduro e com manutenção ativa desenvolvido em 2005 por Linus Torvalds, o famoso criador do kernel do sistema operacional Linux.

Como muitas coisas na vida, o Git começou com um pouco de destruição criativa e uma ardente controvérsia.

O núcleo (kernel) do Linux é um projeto de código aberto com um escopo bastante grande. A maior parte da vida da manutenção do núcleo o Linux (1991-2002), as mudanças no código eram compartilhadas como correções e arquivos. Em 2002, o projeto do núcleo do Linux começou usar uma DVCS proprietária chamada BitKeeper.

Em 2005, a relação entre a comunidade que desenvolveu o núcleo do Linux e a empresa que desenvolveu BitKeeper quebrou em pedaços, e a ferramenta passou a ser paga. Isto alertou a comunidade que desenvolvia o Linux (e especialmente Linux Torvalds, o criador do Linux) a desenvolver a sua própria ferramenta baseada em lições aprendidas ao usar o BitKeeper. Algumas metas do novo sistema era os seguintes:

Velocidade
Projeto simples
Forte suporte para desenvolvimento não-linear (milhares de ramos paralelos)
Completamente distribuído
Capaz de lidar com projetos grandes como o núcleo o Linux com eficiência (velocidade e tamanho dos dados)

Desde seu nascimento em 2005, Git evoluiu e amadureceu para ser fácil de usar e ainda reter essas qualidades iniciais. Ele é incrivelmente rápido, é muito eficiente com projetos grandes, e ele tem um incrível sistema de ramos para desenvolvimento não linear



b. Quem atualmente é o dono do Github e por quê?
O atual dono do github é a Microsoft, Pois e uma parte crucial do ecossistema de desenvolvimento de software. com interesse no valor estrategico, no acesso a repositorios de codigos abertos de forma que eles possam ser guiados para o ambiente de desenvolvimento da Microsoft, onde o dinheiro real é feito.


c. Existe outra maneira, além do terminal, de trabalhar com o Github?
Sim , por aplicativos graficos, como o: Github Desktop, GitKraken, GitAhead, e 
